{"ast":null,"code":"var _jsxFileName = \"/home/ayoub/Desktop/front end/OneStepJavaScript/hooks/src/components/ThemeToggle.js\",\n    _s = $RefreshSig$();\n\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport React, { useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThemeToggle = () => {\n  _s();\n\n  const {\n    isLightTheme,\n    light,\n    dark\n  } = useContext(ThemeContext)[(isLightTheme, setIsLight)] = useState(isLightTheme);\n\n  const Toggle = () => {\n    setIsLight(!isLightTheme);\n  };\n\n  console.log(isLightTheme);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: Toggle,\n    children: \"Toggle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ThemeToggle, \"ODvWv+m88umRnoW0s/8BrFcC1X0=\");\n\n_c = ThemeToggle;\nexport default ThemeToggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"sources":["/home/ayoub/Desktop/front end/OneStepJavaScript/hooks/src/components/ThemeToggle.js"],"names":["ThemeContext","React","useContext","useState","ThemeToggle","isLightTheme","light","dark","setIsLight","Toggle","console","log"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,0BAA7B;AACA,OAAOC,KAAP,IAAcC,UAAd,EAAyBC,QAAzB,QAAwC,OAAxC;;;AAEA,MAAMC,WAAW,GAAG,MAAK;AAAA;;AACrB,QAAM;AAACC,IAAAA,YAAD;AAAcC,IAAAA,KAAd;AAAoBC,IAAAA;AAApB,MAA4BL,UAAU,CAACF,YAAD,CAAV,EACjCK,YAAY,EAACG,UADoB,KACNL,QAAQ,CAACE,YAAD,CADpC;;AAEA,QAAMI,MAAM,GAAG,MAAK;AAChBD,IAAAA,UAAU,CAAC,CAACH,YAAF,CAAV;AACH,GAFD;;AAGAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACA,sBACI;AAAQ,IAAA,OAAO,EAAEI,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAVD;;GAAML,W;;KAAAA,W;AAWN,eAAeA,WAAf","sourcesContent":["import { ThemeContext } from \"../contexts/ThemeContext\";\nimport React,{useContext,useState} from \"react\";\n\nconst ThemeToggle = () =>{\n    const {isLightTheme,light,dark} = useContext(ThemeContext)\n    [isLightTheme,setIsLight] = useState(isLightTheme)\n    const Toggle = () =>{\n        setIsLight(!isLightTheme)\n    }\n    console.log(isLightTheme)\n    return (\n        <button onClick={Toggle}>Toggle</button>\n    )\n}\nexport default ThemeToggle;"]},"metadata":{},"sourceType":"module"}